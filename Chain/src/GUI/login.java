package GUI;

import chainmanagement.*;
import chainmanagement.DealAndUpdate;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.swingx.border.DropShadowBorder;






/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ramaz
 */
public class login extends javax.swing.JFrame {

    /**
     * Creates new form login
     */
    
      Employee person = new Employee();
      Timer timer1 = new Timer();
      Timer timer2 = new Timer();
      Timer timer3 = new Timer();
      boolean in;
      boolean clicked;
      static int xx,yy;
    public login() {
        Employee e=person;
        initComponents();
        setBackground(new Color(0,0,0,0));
        jPanel2.setBackground(new Color(0,0,0,0));
        DropShadowBorder shadow = new DropShadowBorder();
        shadow.setShadowColor(Color.BLACK);
        shadow.setShowLeftShadow(true);
        shadow.setShowRightShadow(true);
        shadow.setShowBottomShadow(true);
        shadow.setShowTopShadow(true);
        shadow.setShadowSize(6);
        jPanel2.setBorder(shadow);
        
        
        
         Timer uptCon=new Timer();//for updating connection in a period

        uptCon.scheduleAtFixedRate(new TimerTask(){
            @Override
            public void run(){
                try {
                    Driver.myCon = DriverManager.getConnection("jdbc:mysql://koypazarindan.com:3306/koypazar_oop?useUnicode=true&useLegacyDatetimeCode=false&serverTimezone=Turkey","koypazar" ,"St.147896325");
                    //2. Create a statement
                    Driver.myStmt = Driver.myCon.createStatement();
                    System.out.println("connection success!");
                } catch (SQLException ex) {
                    System.out.println("CONNECTION LOST!!");;
                }
            }
        
        
        },5*1000,5*1000);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        minimize = new javax.swing.JLabel();
        close = new javax.swing.JLabel();
        chain = new javax.swing.JLabel();
        manahement = new javax.swing.JLabel();
        project = new javax.swing.JLabel();
        login = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        LoginButton = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(null);
        setMinimumSize(new java.awt.Dimension(500, 350));
        setUndecorated(true);

        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(66, 133, 245));
        jPanel1.setForeground(new java.awt.Color(66, 133, 245));

        minimize.setBackground(new java.awt.Color(66, 133, 245));
        minimize.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        minimize.setForeground(new java.awt.Color(255, 255, 255));
        minimize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimize.setText("â€”");
        minimize.setIconTextGap(0);
        minimize.setOpaque(true);
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                minimizeMousePressed(evt);
            }
        });

        close.setBackground(new java.awt.Color(66, 133, 245));
        close.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        close.setForeground(new java.awt.Color(255, 255, 255));
        close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        close.setText("X");
        close.setIconTextGap(0);
        close.setOpaque(true);
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                closeMousePressed(evt);
            }
        });

        chain.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        chain.setForeground(new java.awt.Color(255, 255, 255));
        chain.setText("Chain Marketing");

        manahement.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        manahement.setForeground(new java.awt.Color(255, 255, 255));
        manahement.setText("Management System");

        project.setFont(new java.awt.Font("Segoe UI", 2, 10)); // NOI18N
        project.setForeground(new java.awt.Color(255, 255, 255));
        project.setText("Project for CENG 201");

        login.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        login.setForeground(new java.awt.Color(255, 255, 255));
        login.setText("Login to your account:");

        username.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        username.setForeground(new java.awt.Color(255, 255, 255));
        username.setText("Username:");

        password.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        password.setForeground(new java.awt.Color(255, 255, 255));
        password.setText("Password:");

        usernameField.setBackground(new java.awt.Color(48, 117, 233));
        usernameField.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        usernameField.setForeground(new java.awt.Color(255, 255, 255));
        usernameField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        usernameField.setToolTipText("");
        usernameField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(48, 117, 233), 6));
        usernameField.setCaretColor(new java.awt.Color(255, 255, 255));
        usernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameFieldActionPerformed(evt);
            }
        });

        jPasswordField1.setBackground(new java.awt.Color(48, 117, 233));
        jPasswordField1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jPasswordField1.setForeground(new java.awt.Color(255, 255, 255));
        jPasswordField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(48, 117, 233), 6));
        jPasswordField1.setCaretColor(new java.awt.Color(255, 255, 255));
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
        });

        LoginButton.setBackground(new java.awt.Color(48, 117, 233));
        LoginButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        LoginButton.setForeground(new java.awt.Color(255, 255, 255));
        LoginButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LoginButton.setText("Login");
        LoginButton.setOpaque(true);
        LoginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LoginButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LoginButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LoginButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                LoginButtonMouseReleased(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logowhite.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(project)
                            .addComponent(login))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 239, Short.MAX_VALUE)
                        .addComponent(minimize, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(manahement)
                                    .addComponent(chain))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(username)
                                    .addComponent(password, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(51, 51, 51)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(usernameField, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                                    .addComponent(jPasswordField1))))
                        .addGap(79, 79, 79))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(project)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(chain)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(manahement)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(login))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(username)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(password)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minimize, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 371, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        if(evt.getButton() == MouseEvent.BUTTON1){
            timer2.cancel();
            
                  
            this.dispose();
            System.exit(0);
        }
        
    }//GEN-LAST:event_closeMouseClicked

    private void closeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseExited
       
        
        
        if(close.getBackground().getRed() != 66){
        timer3.cancel();
        TimerTask task1 = new TimerTask() {
            @Override
            public void run() {
                if (close.getBackground().getRed() > 66) {

                    close.setBackground(new Color(close.getBackground().getRed()-1,close.getBackground().getGreen()-1,close.getBackground().getBlue()));
                }
               
            }
        };
        
        timer2 = new Timer();
        timer2.scheduleAtFixedRate(task1, 0, 20);}
    }//GEN-LAST:event_closeMouseExited

    private void closeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMousePressed
        
        if(evt.getButton() == MouseEvent.BUTTON1){
       
        timer2.cancel();
       
        TimerTask task1 = new TimerTask() {
            @Override
            public void run() {
                if (close.getBackground().getRed() <= 80) {

                    close.setBackground(new Color(close.getBackground().getRed()+1,close.getBackground().getGreen()+1,close.getBackground().getBlue()));
                }
            }
        };

        timer3 = new Timer();
        timer3.scheduleAtFixedRate(task1, 0, 20);
        }
        
       
    }//GEN-LAST:event_closeMousePressed

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
                if(evt.getButton() == MouseEvent.BUTTON1){
                    timer1.cancel();
                    timer3.cancel();
                    this.setState(this.ICONIFIED);
                }
              
    }//GEN-LAST:event_minimizeMouseClicked

    private void minimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseExited
        if(minimize.getBackground().getRed() != 66){
        timer1.cancel();
           timer3.cancel();
        TimerTask task1 = new TimerTask() {
            @Override
            public void run() {
                if (minimize.getBackground().getRed() > 66) {

                    minimize.setBackground(new Color(minimize.getBackground().getRed()-1,minimize.getBackground().getGreen()-1,minimize.getBackground().getBlue()));
                }
               
            }
        };

        timer2 = new Timer();
        timer2.scheduleAtFixedRate(task1, 0, 20);}
    }//GEN-LAST:event_minimizeMouseExited

    private void minimizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMousePressed
       
        if(evt.getButton() == MouseEvent.BUTTON1){
        timer1.cancel();
        timer2.cancel();
        TimerTask task1 = new TimerTask() {
            @Override
            public void run() {
                if (minimize.getBackground().getRed() <= 80) {

                    minimize.setBackground(new Color(minimize.getBackground().getRed()+1,minimize.getBackground().getGreen()+1,minimize.getBackground().getBlue()));
                }
            }
        };

        timer3 = new Timer();
        timer3.scheduleAtFixedRate(task1, 0, 20);
        }
        
        
    }//GEN-LAST:event_minimizeMousePressed

    private void usernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameFieldActionPerformed


    
    }//GEN-LAST:event_usernameFieldActionPerformed

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        this.setLocation(evt.getXOnScreen()-xx,evt.getYOnScreen()-yy);
    }//GEN-LAST:event_jPanel2MouseDragged

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
       xx = evt.getX();
       yy = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void LoginButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMouseReleased
        if(in){
            timer2.cancel();
            timer3.cancel();
            TimerTask task1 = new TimerTask() {
                @Override
                public void run() {
                    if (LoginButton.getBackground().getRed() <= 60) {

                        LoginButton.setBackground(new Color(LoginButton.getBackground().getRed()+1,LoginButton.getBackground().getGreen()+1,LoginButton.getBackground().getBlue()));
                    }
                }
            };

            timer1 = new Timer();
            timer1.scheduleAtFixedRate(task1, 0, 20);}
        
        
        String usName=usernameField.getText();
        String pass=new String(jPasswordField1.getPassword());
        int usID=-9, psID=-99;
        usID=DealAndUpdate.checkUsername(usName);
        if(usID!=-1){
            psID=DealAndUpdate.checkPassword(usName, pass);
            if(psID==-1 || (usID != psID)){
                //Wrong Password
                jPasswordField1.setText("");
            }else{
                Employee log=(Employee)person.get_item(usID);
                if(log.getStatus().equalsIgnoreCase("WORKER")){
                    this.dispose();
                    workerPanel p = new workerPanel(log);
                    p.setVisible(true);
                }
                else if(log.getStatus().equalsIgnoreCase("SV")){
                    this.dispose();
                    supervisorPanel s = new supervisorPanel(log);
                    s.setVisible(true);
                }
                else if(log.getStatus().equalsIgnoreCase("CEO")){
                    this.dispose();
                    ceoPanel c = new ceoPanel(log);
                    c.setVisible(true);
                }
            }
            
        }
        usernameField.setText("");
        jPasswordField1.setText("");
        

        
        
        
        clicked = false;
    }//GEN-LAST:event_LoginButtonMouseReleased

    private void LoginButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMousePressed
        timer1.cancel();
        timer2.cancel();
       
        if(evt.getButton() == MouseEvent.BUTTON1){
            clicked = true;
            TimerTask task1 = new TimerTask() {
                @Override
                public void run() {
                    if (LoginButton.getBackground().getRed() >= 28) {

                        LoginButton.setBackground(new Color(LoginButton.getBackground().getRed()-1,LoginButton.getBackground().getGreen()-1,LoginButton.getBackground().getBlue()));
                    }
                }
            };

            timer3 = new Timer();
            timer3.scheduleAtFixedRate(task1, 0, 20);
        }

    }//GEN-LAST:event_LoginButtonMousePressed

    private void LoginButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMouseExited
        timer1.cancel();

        timer3.cancel();
        TimerTask task1 = new TimerTask() {
            @Override
            public void run() {
                if (LoginButton.getBackground().getRed() >= 48) {

                    LoginButton.setBackground(new Color(LoginButton.getBackground().getRed()-1,LoginButton.getBackground().getGreen()-1,LoginButton.getBackground().getBlue()));
                }
                else if(LoginButton.getBackground().getRed() < 48){
                    LoginButton.setBackground(new Color(LoginButton.getBackground().getRed()+1,LoginButton.getBackground().getGreen()+1,LoginButton.getBackground().getBlue()));
                }
            }
        };
        in = false;
        timer2 = new Timer();
        timer2.scheduleAtFixedRate(task1, 0, 20);
    }//GEN-LAST:event_LoginButtonMouseExited

    private void LoginButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMouseEntered
        timer2.cancel();
        timer3.cancel();
        TimerTask task1 = new TimerTask() {
            @Override
            public void run() {
                if (LoginButton.getBackground().getRed() <= 60) {

                    LoginButton.setBackground(new Color(LoginButton.getBackground().getRed()+1,LoginButton.getBackground().getGreen()+1,LoginButton.getBackground().getBlue()));
                }
            }
        };
        in = true;
        timer1 = new Timer();
        timer1.scheduleAtFixedRate(task1, 0, 20);
    }//GEN-LAST:event_LoginButtonMouseEntered

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        
       if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
     
           
           
        String usName=usernameField.getText();
        String pass=new String(jPasswordField1.getPassword());
        int usID=-9, psID=-99;
        usID=DealAndUpdate.checkUsername(usName);
        if(usID!=-1){
            psID=DealAndUpdate.checkPassword(usName, pass);
            if(psID==-1 || (usID != psID)){
                //Wrong Password
                jPasswordField1.setText("");
            }else{
                Employee log=(Employee)person.get_item(usID);
                if(log.getStatus().equalsIgnoreCase("WORKER")){
                    this.dispose();
                    workerPanel p = new workerPanel(log);
                    p.setVisible(true);
                }
                else if(log.getStatus().equalsIgnoreCase("SV")){
                    this.dispose();
                    supervisorPanel s = new supervisorPanel(log);
                    s.setVisible(true);
                }
                else if(log.getStatus().equalsIgnoreCase("CEO")){
                    this.dispose();
                    ceoPanel c = new ceoPanel(log);
                    c.setVisible(true);
                }
            }
            
        }
        usernameField.setText("");
        jPasswordField1.setText("");
           
   }
        
    }//GEN-LAST:event_jPasswordField1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LoginButton;
    private javax.swing.JLabel chain;
    private javax.swing.JLabel close;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JLabel login;
    private javax.swing.JLabel manahement;
    private javax.swing.JLabel minimize;
    private javax.swing.JLabel password;
    private javax.swing.JLabel project;
    private javax.swing.JLabel username;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
